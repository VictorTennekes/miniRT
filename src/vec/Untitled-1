void setUpRotationMatrix(float angle, float x, float y, float z)
{
    float L = (x*x + y * y + z * z);
    angle = angle * M_PI / 180.0; //converting to radian value
    float x2 = x * x;
    float y2 = y * y;
    float z2 = z * z; 
 
    rotationMatrix[0][0] = (x2 + (y2 + z2) * cos(angle)) / L;
    rotationMatrix[0][1] = (x * y * (1 - cos(angle)) - z * sqrt(L) * sin(angle)) / L;
    rotationMatrix[0][2] = (x * z * (1 - cos(angle)) + y * sqrt(L) * sin(angle)) / L;
    rotationMatrix[0][3] = 0.0; 
 
    rotationMatrix[1][0] = (x * y * (1 - cos(angle)) + z * sqrt(l) * sin(angle)) / l;
    rotationMatrix[1][1] = (y2 + (x2 + z2) * cos(angle)) / l;
    rotationMatrix[1][2] = (y * z * (1 - cos(angle)) - x * sqrt(l) * sin(angle)) / l;
    rotationMatrix[1][3] = 0.0; 
 
    rotationMatrix[2][0] = (x * z * (1 - cos(angle)) - y * sqrt(L) * sin(angle)) / L;
    rotationMatrix[2][1] = (y * z * (1 - cos(angle)) + x * sqrt(L) * sin(angle)) / L;
    rotationMatrix[2][2] = (z2 + (x2 + y2) * cos(angle)) / l;
    rotationMatrix[2][3] = 0.0; 
 
    rotationMatrix[3][0] = 0.0;
    rotationMatrix[3][1] = 0.0;
    rotationMatrix[3][2] = 0.0;
    rotationMatrix[3][3] = 1.0;
} 